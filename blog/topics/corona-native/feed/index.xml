<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Corona native builds &#8211; Corona Labs</title>
	<atom:link href="/blog/topics/corona-native/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Mon, 19 Oct 2020 12:16:12 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.8</generator>

<image>
	<url>/wordpress/wp-content/uploads/2017/06/cropped-icon_32x32@2x-32x32.png</url>
	<title>Corona native builds &#8211; Corona Labs</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Introducing the Self-Hosted Plugins plan</title>
		<link>/blog/2018/01/24/introducing-the-self-hosted-plugins-plan/</link>
		<pubDate>Wed, 24 Jan 2018 18:47:02 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Corona Marketplace]]></category>
		<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[News & Announcements]]></category>
		<category><![CDATA[Plugins]]></category>

		<guid isPermaLink="false">/?p=73278</guid>
		<description><![CDATA[There is a new plan for self-hosted plugins. Learn more about this new feature and how you can use it.]]></description>
				<content:encoded><![CDATA[<p>There have been several requests for a standalone self-hosted plugin plan. Self-hosted plugins are a method for studios who are making their own native plugins to create plugins, yet still use the simulator for building their apps. Normally if you need to use a custom plugin, you would have to use native builds to create and test each build.</p>
<p>Previously, the self-hosted plugin feature was part of the Unlimited Enterprise package.. Once we made native builds free, this feature was added to the <a href=https://marketplace.coronalabs.com/support/priority-plus-support target="_blank" rel="noopener">Priority Plus Support plan</a>. We have now made a standalone version of the self-hosted plugin plan. This feature is now available for $499/year and can be purchased in the <a href=https://marketplace.coronalabs.com/support/self-hosted-plugins target="_blank" rel="noopener">Corona Marketplace</a>.</p>
<p>Now studios can access this feature without the need for the additional support plan.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Using plugins with native Android builds</title>
		<link>/blog/2017/10/19/using-plugins-with-native-android-builds/</link>
		<pubDate>Thu, 19 Oct 2017 17:55:52 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[Tutorials, Tips and Demos]]></category>

		<guid isPermaLink="false">/?p=72935</guid>
		<description><![CDATA[A frequently asked question is how to include plugins into Android based native projects. Learn how you can do that!]]></description>
				<content:encoded><![CDATA[<p><img class="alignright size-full wp-image-35232" src="/wordpress/wp-content/uploads/2013/05/Icon_Resources_Plugin.png" alt="" width="122" height="122" />When making Simulator builds, Corona magically binds plugins to your app for you. However on Native builds, this process is not automatic. Much like we did for <a href=/blog/2017/07/06/using-plugins-in-corona-native-projects-ios/ target="_blank" rel="noopener">Xcode builds</a>, we have come up with a way to help you get your Android based plugins into your Android Studio project.</p>
<p>Unlike Xcode, where you run a <code>Download Plugins</code> scheme and we do all the work for you, we offer a command line script that will read your <code>build.settings</code> file and download the plugins to a common folder. From there, it&#8217;s your responsibility to integrate them into your Android Studio project. Each Android plugin may have additional settings and configuration that you need to complete before you can use it.</p>
<p>The script is located at <code>android/download_plugins.sh</code> as part of the App template you start new projects with. To download plugins for an existing project, copy the download_plugin.sh to your <code>android</code> folder and run it from that folder.</p>
<p>Hopefully this will help you with your native Android based Corona projects.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Welcome to public release 2017.3135</title>
		<link>/blog/2017/09/11/welcome-to-public-release-2017-3135/</link>
		<pubDate>Mon, 11 Sep 2017 23:41:25 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[Corona SDK]]></category>
		<category><![CDATA[News & Announcements]]></category>

		<guid isPermaLink="false">/?p=72808</guid>
		<description><![CDATA[Our engineers have been very busy updating Corona, continuing to provide a world-class 2D development framework. See what has been added to the new public release.]]></description>
				<content:encoded><![CDATA[<p>Since our last public release (2017.3068) in April, our engineers have been very busy updating Corona, continuing to provide a world-class 2D development framework. This engineering cycle has focused a lot on stability and adapting to new business models, but we&#8217;ve managed to add in some pretty cool things too!</p>
<h3>Corona Enterprise is now free</h3>
<p>Starting with build 2017.3100, <a href=/blog/2017/06/21/welcome-to-the-new-corona/ target="_blank" rel="noopener">Corona Enterprise became free</a>. We re-branded it as <strong>Corona Native</strong> and it&#8217;s now included in the unified Corona application. With this public release, Corona Native is now available to everyone.</p>
<h3>Windows Simulator updates</h3>
<p>We have also focused on improving the user interface for Windows users. Now you can stop builds in progress by simply clicking the &#8220;Stop&#8221; button. The build process also has a visual indicator of its progression. Finally, we have reduced the Java dependencies, although you will still need the 32-bit Java JDK installed.</p>
<h3>Google IAP Plugin</h3>
<p>This plugin was updated to make its initialization <strong>asynchronous</strong>. Prior to this, Corona would &#8220;block&#8221; while waiting for the initialization to complete. Because of this update, if your app currently makes calls to APIs like <a href=https://docs.coronalabs.com/plugin/google-iap-v3/loadProducts.html target="_blank" rel="noopener">store.loadProducts()</a> or <a href=https://docs.coronalabs.com/plugin/google-iap-v3/restore.html target="_blank" rel="noopener">store.restore()</a> within <code>main.lua</code>, these calls will likely execute <em>before</em> the plugin has finished initializing, causing them to fail. Since this change affects builds 2017.3105 and later, if you&#8217;re updating from the previous public build, <strong>this change will affect you</strong> and you should read <a href=/blog/2017/07/19/important-google-iap-plugin-update/ target="_blank" rel="noopener">this post</a> for steps on updating your code.</p>
<h3>Facebook V4 Plugin</h3>
<p>The Facebook V4 plugin had the same issue with initialization blocking which increased &#8220;App Not Responding&#8221; (ANR) errors on Android devices. Because updating the existing plugin would have caused a significant breaking change, we created a <strong>new</strong> plugin, <a href=https://docs.coronalabs.com/plugin/facebook-v4a/index.html target="_blank" rel="noopener">plugin.facebook.v4a</a>, so you can migrate at your convenience. For more details, see <a href=/blog/2017/08/14/introducing-new-facebook-v4a-plugin/ target="_blank" rel="noopener">this post</a>.</p>
<h3>Changes to native text field input types</h3>
<p>We added <code>"decimal"</code> keyboard type support for <a href=https://docs.coronalabs.com/api/type/TextField/inputType.html target="_blank" rel="noopener">native.newTextField()</a> on all platforms (previously it was only available on iOS). We also added a <code>"no-emoji"</code> keyboard type that prevents users from entering emojis, although it may still be possible for users to &#8220;paste&#8221; in emojis on some platforms.</p>
<h3>Physics time scale APIs</h3>
<p>Two new APIs were added to the physics library, allowing you to set/get the <strong>time scale</strong> of the physics simulation &#8212; see <a href=https://docs.coronalabs.com/api/library/physics/setTimeScale.html target="_blank" rel="noopener">physics.setTimeScale()</a> and <a href=https://docs.coronalabs.com/api/library/physics/getTimeScale.html target="_blank" rel="noopener">physics.getTimeScale()</a>.</p>
<h3>Apple in-app purchases</h3>
<p>The Apple IAP <a href=https://docs.coronalabs.com/api/library/store/index.html target="_blank" rel="noopener">store.*</a> APIs now work on macOS and tvOS, in addition to iOS. Also, the iOS 11 requirement that apps support store-initiated purchases has been added.</p>
<h3>Font metrics</h3>
<p>We have <a href=/blog/2017/08/17/introducing-new-font-metrics-apis-plus-a-new-plugin/ target="_blank" rel="noopener">added new APIs</a> to help you compute the baseline and other metrics for fonts, allowing more control of vertical alignment for text objects in relation to other graphical elements or text objects of different fonts/sizes.</p>
<h3>Plugins</h3>
<ul>
<li><strong><a href=https://marketplace.coronalabs.com/search?search=applovin target="_blank" rel="noopener">AppLovin</a></strong> — Previously, AppLovin was only available as a revenue-share plugin. While this is optimal for developers with smaller revenue streams from ads, those with higher income prefer a fixed fee. As such, AppLovin is now available as two plugins: <strong>free</strong> (with revenue-share) and <strong>paid</strong> ($199/year). Now, as your income profile changes, you can use the best plugin as needed.</li>
<li><strong><a href=https://marketplace.coronalabs.com/search?search=Facebook+Audience+Network target="_blank" rel="noopener">Facebook Audience Network</a></strong> — Similar to how we made both a paid and revenue-share version of AppLovin, the F.A.N. plugin is now available in both paid and revenue-share versions.</li>
<li><strong><a href=https://marketplace.coronalabs.com/plugin/battery-state target="_blank" rel="noopener">BatteryState</a></strong> — This new plugin allows you to either get battery events or query the battery system to determine how much charge the battery has, if it&#8217;s charging, unplugged, etc.</li>
<li><strong><a href=https://marketplace.coronalabs.com/plugin/nano-svg target="_blank" rel="noopener">NanoSVG</a></strong> — You can now import some SVG graphics as Corona bitmap textures using this plugin.</li>
<li><a href=https://docs.coronalabs.com/plugin/collisionFilters/index.html target="_blank" rel="noopener"><strong>Collision Filters</strong></a> — This plugin is designed to circumvent the math and complication of creating physics body collision filters using <code>categoryBits</code> and <code>maskBits</code>, letting you assign user-friendly names to &#8220;categories&#8221; of objects in your physics simulation without worrying about internal binary values and sums which are liable to change as you adjust game behavior.</li>
</ul>
<p>&nbsp;</p>
<div class="align-wrap" style="text-align: center; margin-top: 35px; margin-bottom: 35px;">
<p><a class="qbutton" style="color: #fff;" href=https://developer.coronalabs.com/downloads/coronasdk/ target="_blank" rel="noopener">Get the latest Corona</a></p>
</div>
]]></content:encoded>
			</item>
		<item>
		<title>Using plugins in Corona Native projects (iOS)</title>
		<link>/blog/2017/07/06/using-plugins-in-corona-native-projects-ios/</link>
		<pubDate>Thu, 06 Jul 2017 17:51:06 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Corona native builds]]></category>

		<guid isPermaLink="false">/?p=72238</guid>
		<description><![CDATA[Learn how to include Corona plugins in your Corona Native (iOS) projects.]]></description>
				<content:encoded><![CDATA[<p>With the new unified Corona (Corona + Corona Native), some developers have asked how to <a href=https://docs.coronalabs.com/native/ios/usingPlugins.html target="_blank" rel="noopener">include plugins in Corona Native projects</a>. The process outlined here is for <strong>iOS only</strong>, but we plan to post similar instructions for Android Studio soon.</p>
<p><strong>IMPORTANT:</strong> The process outlined herein requires <a href=https://developer.coronalabs.com/downloads/daily-builds/ target="_blank" rel="noopener">daily build 2017.3103</a> or later.</p>
<p>Essentially, to use plugins with Corona Native builds through Xcode, you must include them in <code>build.settings</code> just like you would for Corona Simulator builds, for example:</p><pre class="crayon-plain-tag">settings =
{
    plugins =
    {
        [&quot;plugin.openssl&quot;] =
        {
            publisherId = &quot;com.coronalabs&quot;
        },
    },
}</pre><p>From here, you must run a process which contacts the <a href=https://marketplace.coronalabs.com/plugins target="_blank" rel="noopener">Corona Marketplace</a> and confirms that you have an active license for the plugin(s). If confirmed, Corona will install the library files and link them to your project.</p>
<h3>Procedure</h3>
<p>To perform the process described above, simply follow these steps:</p>
<ol>
<li>Open your project in Xcode.</li>
<li>In the Xcode tool bar, click on the <strong>active scheme</strong> button and select <strong>Download Plugins</strong>:<br />
<img class="alignnone wp-image-72261" style="margin-top: 20px; margin-bottom: 20px;" src="/wordpress/wp-content/uploads/2017/07/native-plugin-ios-1.png" alt="" width="600" height="238" srcset="/wordpress/wp-content/uploads/2017/07/native-plugin-ios-1.png 750w, /wordpress/wp-content/uploads/2017/07/native-plugin-ios-1-300x119.png 300w, /wordpress/wp-content/uploads/2017/07/native-plugin-ios-1-700x278.png 700w" sizes="(max-width: 600px) 100vw, 600px" /></li>
<li>Click on the <strong>Run</strong> button to download the plugin(s):<br />
<img class="alignnone wp-image-72262" style="margin-top: 20px; margin-bottom: 5px;" src="/wordpress/wp-content/uploads/2017/07/native-plugin-ios-2.png" alt="" width="680" height="138" srcset="/wordpress/wp-content/uploads/2017/07/native-plugin-ios-2.png 850w, /wordpress/wp-content/uploads/2017/07/native-plugin-ios-2-300x61.png 300w, /wordpress/wp-content/uploads/2017/07/native-plugin-ios-2-768x155.png 768w, /wordpress/wp-content/uploads/2017/07/native-plugin-ios-2-700x142.png 700w" sizes="(max-width: 680px) 100vw, 680px" /></li>
<li>In the Xcode tool bar, click on the <strong>active scheme</strong> button and select your main app.</li>
</ol>
<hr />
<p>Now you can build your app with any plugin in the <a href=https://marketplace.coronalabs.com/ target="_blank" rel="noopener">Corona Marketplace</a>. Note that you&#8217;ll need to download the plugin(s) each time you add or change plugin settings/inclusions within <code>build.settings</code>.</p>
<p><strong>REMINDER:</strong> Unless you need access to specific native libraries, offline builds. or you are building native-based plugins, you can (and should) build and ship apps using the <strong>Corona Simulator</strong> and <a href=https://docs.coronalabs.com/api/ target="_blank" rel="noopener">Corona Lua APIs</a>. Essentially, while some specific tasks may require Corona Native, they should only be implemented by developers who have previous experience with native functionality.</p>
]]></content:encoded>
			</item>
		<item>
		<title>New public build 2016.2992 now available</title>
		<link>/blog/2016/11/16/new-public-build-2016-2992-now-available/</link>
		<pubDate>Wed, 16 Nov 2016 22:07:26 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[Corona SDK]]></category>
		<category><![CDATA[CoronaCards]]></category>
		<category><![CDATA[News & Announcements]]></category>

		<guid isPermaLink="false">/?p=68731</guid>
		<description><![CDATA[The latest public build of Corona SDK, Corona Enterprise, and CoronaCards is now available for download. Read on to learn more about this release!]]></description>
				<content:encoded><![CDATA[<p><a href=https://developer.coronalabs.com/downloads/coronasdk><img class="alignright wp-image-68862" style="margin: 5px 0px 20px 15px;" src="/wordpress/wp-content/uploads/2016/11/download.png" alt="download" width="143" height="52" /></a>The latest public build of Corona SDK, Corona Enterprise, and CoronaCards is now <a href=https://developer.coronalabs.com/downloads/coronasdk target="_blank">available for download</a>. We&#8217;ve added quite a few new features and made several updates. With this build (<a href=https://developer.coronalabs.com/downloads/coronasdk target="_blank">2016.2992</a>), Corona is more solid than ever and it continues to grow!</p>
<p>Read on for a summary of the changes you&#8217;ll see if you&#8217;re upgrading from 2016.2949, or check out the <a href=http://developer.coronalabs.com/content/corona-sdk-release-notes-build-20162992 target="_blank">full release notes</a>.</p>
<h3>Corona Simulator</h3>
<ul>
<li>Introduction of a new Welcome window. We&#8217;ve made useful links more, well, &#8220;useful.&#8221; You also have a better view of your recent projects.<br />
<img class="alignnone wp-image-68732" style="margin-top: 20px; margin-bottom: 20px;" src="/wordpress/wp-content/uploads/2016/11/Screen-Shot-2016-11-09-at-9.46.27-PM-1024x653.png" alt="screen-shot-2016-11-09-at-9-46-27-pm" width="552" height="352" /></li>
<li>We now attempt to validate keys and values in <code>build.settings</code> and <code>config.lua</code>. For example, if your app requires a key like <code>FacebookAppId</code> and you enter <code>FaceBookID</code> instead, Corona will alert you that the key isn&#8217;t recognized, helping you pinpoint potential issues <em>before</em> you build your app.</li>
<li>With iOS 10, Apple made changes to how they scan submitted apps and, as a result, we now provide default values for the various <code>NSDescription</code> strings required by Apple. If you use these <a href=https://docs.coronalabs.com/guide/distribution/buildSettings/index.html?#permissions target="_blank">permission-based features</a>, however, we <em>strongly</em> recommend that you provide actual values for these strings.</li>
<li>macOS 10.12, Xcode 8.x, and iOS 10.x brought considerable changes that needed to be reflected in the Simulator and build process. This build of Corona will require you to use Xcode 8.1 since we now default to iOS 10.1 as the primary SDK.</li>
<li>Introduction of Corona live builds (beta) from the Corona Simulator for macOS. These builds are a powerful and efficient way to see exactly how your in-development Corona app will appear on real devices.</li>
<li>New borderless skin for testing the iPad Pro.</li>
<li>The Simulator for macOS now supports the hardware &#8220;back&#8221; button when you use an Android or WP8 skin &#8212; just select <strong>Hardware</strong> → <strong>Back</strong> from the main menu.</li>
<li>Minor improvements to the console log screen introduced in the previous public build.</li>
</ul>
<h3>Core</h3>
<ul>
<li>Widget <a href=https://docs.coronalabs.com/api/library/widget/newPickerWheel.html target="_blank">picker wheels</a> are now resizable so that you can incorporate them into your UI with much greater flexibility.</li>
<li>Improved splash screen controls including per-platform support. You now have the ability to use a unique splash screen image for iOS and another for Android. You can also enable and disable the splash screen for each platform, if desired.</li>
</ul>
<h3>Windows</h3>
<ul>
<li>Previously, the default behavior for Windows Desktop builds was to allow multiple instances of apps to run. Most apps, in particular games, only allow one version to run at a time. We have changed it so that Windows desktop apps are now single-instance by default. However, if you are building an app that needs multiple instances, this can still be enabled via a <code>build.settings</code> entry (see <a href=https://docs.coronalabs.com/guide/distribution/win32Build/index.html?#singleinstance target="_blank">here</a> for details).</li>
<li>We have improved command line parameter handling for desktop builds and added <code>applicationOpen</code> support to single-instance Win32 desktop apps.</li>
</ul>
<h3>macOS</h3>
<ul>
<li>Similar to Windows, improved command line parameter handling for desktop builds.</li>
</ul>
<h3>Android</h3>
<ul>
<li>We&#8217;ve worked to improve the way video plays on Android. With improvements to <a href=https://docs.coronalabs.com/api/library/native/newVideo.html target="_blank">native.newVideo()</a> and <a href=https://docs.coronalabs.com/api/library/media/playVideo.html target="_blank">media.playVideo()</a>, you should now have more success pausing and seeking within videos loaded from remote sources.</li>
<li>Corona Enterprise for Android developers get new APIs for creating <code>AlertDialog.Builders</code> such as:<br />
<code>CoronaActivity.createAlertDialogBuilder()</code><br />
<code>CoronaActivity.createDarkAlertDialogBuilder()</code><br />
<code>CoronaActivity.createLightAlertDialogBuilder()</code></li>
<li>New <code>PackageServices</code> Enterprise APIs for interacting with Android packages.</li>
</ul>
<h3>iOS</h3>
<ul>
<li>Corona Enterprise for iOS developers get a new API, <code>CoronaEventDataKey()</code>.</li>
</ul>
<h3>tvOS</h3>
<ul>
<li>Updates to support the latest version of the tvOS SDK as required by Apple, including new graphic asset requirements like a &#8220;top shelf wide&#8221; image.</li>
<li>Support for <code>native.showPopup( "appstore" )</code> on tvOS. This is the popup that lets you easily rate, review, and download apps.</li>
</ul>
<h3>Other notes</h3>
<p>On October 1st, 2016, we changed our Terms of Service to reflect some important changes. Specifically, Corona Enterprise users may not build custom monetization-oriented plugins with their license. Instead, these users may use hosted monetization plugins offered in the <a href=https://marketplace.coronalabs.com/plugins/monetization target="_blank">Corona Marketplace</a>. Corona Enterprise users wishing to build/use a monetization plugin that is not hosted in the Corona Marketplace may contact us for permitted usage.</p>
<p>This new policy will grant the platform and its users with plugins and adapters that are officially supported and maintained by the Corona team. This will ensure build quality and ultimately bring many options for our customers to implement and experiment with. Our goal is to bring the best options the industry has to offer and, moreover, ensure the integrity of builds and the platform as a whole into the future.</p>
<h3>Conclusion</h3>
<p>Corona Labs&#8217; team of engineers continues to innovate and grow our suite of products. Make sure you <a href=https://developer.coronalabs.com/downloads/coronasdk target="_blank">download build 2016.2992</a> to see all of these new improvements. Shortly upcoming, we will resume daily builds and march onward to our next public build!</p>
<p>Questions or comments? Join us in the <a href=https://forums.coronalabs.com/forum/551-daily-builds-and-public-releases/ target="_blank">Corona Forums</a> to discuss this release.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Introducing external bitmap textures</title>
		<link>/blog/2016/09/22/introducing-external-bitmap-textures/</link>
		<pubDate>Thu, 22 Sep 2016 19:03:40 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[Corona SDK]]></category>
		<category><![CDATA[News & Announcements]]></category>
		<category><![CDATA[Plugins]]></category>
		<category><![CDATA[bitmap]]></category>
		<category><![CDATA[graphics]]></category>
		<category><![CDATA[textures]]></category>

		<guid isPermaLink="false">/?p=67990</guid>
		<description><![CDATA[Corona Labs engineers have created a new graphics-related feature and a new plugin which Enterprise/plugin developers can expand upon to build some very powerful graphical capabilities. Read further to learn more!]]></description>
				<content:encoded><![CDATA[<p>The Corona engineers have been doing some wonderful things lately, especially on the graphics engine side. One of these items is a feature which allows plugin creators and Corona Enterprise users to push textures directly into the Corona Graphics pipeline, effectively providing bitmap data. Resulting textures will behave similarly to those created by <a href=https://docs.coronalabs.com/api/library/graphics/newTexture.html target="_blank">graphics.newTexture()</a>.</p>
<h3>Below the surface</h3>
<p>Normally with Corona <a href=https://docs.coronalabs.com/api/library/display/index.html target="_blank">display</a> APIs, images are loaded and textures are created in memory, processed via the graphics processing unit (GPU). Once the image is in that realm, it becomes difficult to do pixel-level manipulation &#8212; setting and getting individual pixel information is a time-consuming effort, making it impractical for most operations.</p>
<p>Fortunately, the Corona Graphics API set provides capabilities to create textures with custom data from C-based plugins. The resulting objects inherit properties of <a href=https://docs.coronalabs.com/api/type/TextureResourceExternal/index.html target="_blank">TextureResourceExternal</a> as well as <a href=https://docs.coronalabs.com/api/type/TextureResource/index.html target="_blank">TextureResource</a> properties. Once created, these objects have <code>filename</code> and <code>baseDir</code> properties which can be used in any <a href=https://docs.coronalabs.com/api/library/display/index.html target="_blank">display</a> API or for assigning fills.</p>
<h3>Possibilities?</h3>
<p>An example of a plugin which might utilize these capabilities is a plugin which loads SVG (Scalable Vector Graphics) files, rasterizes them on the native C side, and pushes the results to Corona to return a texture object. That texture object could then be used to create typical display objects.</p>
<p>Other examples include image manipulation plugins based on <a href=http://www.imagemagick.org/script/index.php target="_blank">ImageMagick</a> or another C library, custom text and font renderers, and importing images from unsupported formats &#8212; the possibilities are endless!</p>
<h3>Take it for a test drive!</h3>
<p>To demonstrate this technology, our engineers have created a very simple plugin called <a href=https://marketplace.coronalabs.com/plugin/memory-bitmap target="_blank">memoryBitmap</a>. Available in the <a href=https://marketplace.coronalabs.com/plugin/memory-bitmap target="_blank">Corona Marketplace</a>, this plugin has just a single method, <a href=https://docs.coronalabs.com/plugin/memoryBitmap/newTexture.html target="_blank">memoryBitmap.newTexture()</a>. This creates a blank texture of specified dimensions and the result is a new <a href=https://docs.coronalabs.com/api/type/TextureResourceExternal/index.html target="_blank">TextureResourceExternal</a> object with two additional methods: <a href=https://docs.coronalabs.com/plugin/memoryBitmap/type/MemoryBitmap/setPixel.html target="_blank">:setPixel()</a> and <a href=https://docs.coronalabs.com/plugin/memoryBitmap/type/MemoryBitmap/getPixel.html target="_blank">:getPixel()</a>.</p>
<p>Directly &#8220;out of the box,&#8221; this plugin isn&#8217;t particularly useful to Corona SDK developers, since it cannot access your existing images. However, its <a href=https://github.com/coronalabs/plugins-sample-memoryBitmap target="_blank">source code</a> may be useful to Corona Enterprise plugin developers as a template for cross-platform Corona plugins supported on macOS, iOS, tvOS, Android, and Windows.</p>
<h3>Example</h3>
<p>We made a quick demo to create Spirograph™ style drawings using this new plugin&#8217;s <a href=https://docs.coronalabs.com/plugin/memoryBitmap/type/MemoryBitmap/setPixel.html target="_blank">:setPixel()</a> method. To test it, you&#8217;ll need to activate the plugin in the <a href=https://marketplace.coronalabs.com/plugin/memory-bitmap target="_blank">Corona Marketplace</a> and add the plugin to your <code>build.settings</code>.</p>
<p><a href=/wordpress/wp-content/uploads/2016/09/memory-bitmap.png><img class="alignnone size-full wp-image-68106" src=/wordpress/wp-content/uploads/2016/09/memory-bitmap.png alt="memory-bitmap" width="960" height="540" /></a>Below is the code for creating the texture and manipulating it by setting pixels:</p><pre class="crayon-plain-tag">local memoryBitmap = require( &quot;plugin.memoryBitmap&quot; )

local tex = memoryBitmap.newTexture(
{
    width = 1024,
    height = 1024,
    format = &quot;rgba&quot;
})

local function makeSpirals( texture, xOffset, yOffset, innerRadius, outerRadius, penOffset, color )
    -- Based on: http://introcs.cs.princeton.edu/java/15inout/Spirograph.java.html
    local R = outerRadius
    local r = innerRadius
    local a = penOffset

    for t = 0.0, 100, 0.01 do
        local x = (R+r) * math.cos(t) - (r+a) * math.cos(((R+r)/r)*t)
        local y = (R+r) * math.sin(t) - (r+a) * math.sin(((R+r)/r)*t)
        local degrees = -1 * math.deg((R+r)/r)*t
        texture:setPixel( x + xOffset, y + yOffset, color )
    end
    texture:invalidate()
end

makeSpirals( tex, 512, 512, 100, 55, 20, { 1, 0, 0, 1 } )</pre><p>In this example, the <a href=https://docs.coronalabs.com/plugin/memoryBitmap/newTexture.html target="_blank">memoryBitmap.newTexture()</a> function is returning a blank slate to work with. Essentially, you tell it the size of the object and the color depth rules and then you can start manipulating pixels as much as you like.</p>
<h3>Conclusion</h3>
<p>We are excited to see what enterprising Corona developers will create with <a href=https://docs.coronalabs.com/api/type/TextureResourceExternal/index.html target="_blank">TextureResourceExternal</a> and the <a href=https://marketplace.coronalabs.com/plugin/memory-bitmap target="_blank">memoryBitmap</a> plugin as a basis for amazing features. Got a great idea? Please join us in the <a href=https://forums.coronalabs.com/forum/615-advanced-graphics/ target="_blank">Corona forums</a>!</p>
]]></content:encoded>
			</item>
		<item>
		<title>Corona major build release 2016.2949</title>
		<link>/blog/2016/09/19/corona-major-build-release-2016-2949/</link>
		<pubDate>Mon, 19 Sep 2016 22:50:01 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[Corona SDK]]></category>
		<category><![CDATA[CoronaCards]]></category>
		<category><![CDATA[Daily Build]]></category>
		<category><![CDATA[News & Announcements]]></category>

		<guid isPermaLink="false">/?p=68100</guid>
		<description><![CDATA[Corona Labs is pleased to announce build 2016.2949 as a major release. Click through to read the details!]]></description>
				<content:encoded><![CDATA[<p><img class="alignright wp-image-67801" style="margin: 0px 0px 20px 20px;" src="/wordpress/wp-content/uploads/2016/08/corona_logo-150x150.png" alt="Corona Labs logo" width="120" height="120" srcset="/wordpress/wp-content/uploads/2016/08/corona_logo-150x150.png 150w, /wordpress/wp-content/uploads/2016/08/corona_logo-300x300.png 300w, /wordpress/wp-content/uploads/2016/08/corona_logo-768x768.png 768w, /wordpress/wp-content/uploads/2016/08/corona_logo-570x570.png 570w, /wordpress/wp-content/uploads/2016/08/corona_logo-500x500.png 500w, /wordpress/wp-content/uploads/2016/08/corona_logo-700x700.png 700w, /wordpress/wp-content/uploads/2016/08/corona_logo.png 862w" sizes="(max-width: 120px) 100vw, 120px" />Corona Labs is pleased to announce the immediate availability of build <a href=http://developer.coronalabs.com/content/coronasdk-20162949-0 target="_blank">2016.2949</a> as a major release.</p>
<p>There are several reasons for this, but the main impetus was recent changes in Apple&#8217;s submission process. Because of their new requirements for app submissions, our previous public build (2016.2906) can&#8217;t be used by developers submitting apps for iOS/tvOS, and it was not practical to retrofit that build to meet Apple&#8217;s new guidelines. Since our next intended public release is at least a month away, we felt it necessary to provide a major release that works with Apple&#8217;s new rules.</p>
<p>This major release also includes the <strong>iOS 10</strong> SDK &#8212; you can now use Xcode 8 and the iOS 10 SDK to build apps, or you can continue with Xcode 7.3 and the iOS 9 SDK.</p>
<p>Starting today, downloading the public build will get you build <a href=http://developer.coronalabs.com/content/coronasdk-20162949-0 target="_blank">2016.2949</a> instead of 2016.2906.</p>
<h3>And more&#8230;</h3>
<p>In the current development cycle, our engineers have been working hard on addressing infrastructure and core improvements to Corona to make a more stable platform. See the release notes below for a list of many of the changes in this release, including new features which we plan to announce over the next couple of weeks.</p>
<p>One of these features is new &#8220;splash screen&#8221; controls, a system which will drastically simplify splash screen implementation. Starting with this build, a default Corona-branded splash screen will appear briefly when the app starts. We continue to believe in keeping Corona free to use, but we also need to grow Corona. A few seconds of branding will help improve our brand awareness. For those who want to use their own branding, you can purchase a plugin from the <a href=https://marketplace.coronalabs.com/plugin/splash-screen-control target="_blank">Corona Marketplace</a> for $99/year per user &#8212; this will let you use your own image for the splash screen or disable it completely. In summary, the splash screen feature will help us continue to build the best cross-platform 2D app development platform in the market.</p>
<p>As a bonus, we&#8217;ve also re-designed the developer portal at <a href=https://portal.coronalabs.com/ target="_blank">portal.coronalabs.com</a>. With this new portal, you have quick access to useful resources like the <a href=https://monetize.coronalabs.com/ target="_blank">Corona Ads dashboard</a>, <a href=https://docs.coronalabs.com/ target="_blank">documentation</a>, the <a href=https://docs.coronalabs.com/guide/programming/index.html target="_blank">Getting Started</a> guide, bug reporting, community forums, and the <a href=https://marketplace.coronalabs.com/ target="_blank">Corona Marketplace</a>. You can also quickly view your existing subscriptions and access/update your account information.</p>
<h3>Release notes (2016.2949)</h3>
<ul>
<li>macOS: improve reliability of &#8220;Copy to device&#8221; option on build dialogs; add &#8220;Retry&#8221; button for when you forget to plug in a device.</li>
<li>Simulators: add missing &#8220;Borderless&#8221; skin in iPad Pro size.</li>
<li>Fixed issue with splash screen code which caused stacktraces to appear for some people when the splash screen was disabled.</li>
<li>macOS: Removed beta tag from iOS and tvOS building with Xcode 8.0.</li>
<li>iOS, tvOS: fix issue which prevented apps being submitted to the App Store.</li>
<li>macOS: Added Back key support for Android skins in Simulator (Hardware→Back).</li>
<li>Core: Fixed crash when custom shader contains empty table. Casenum 5894470.</li>
<li>Core: Added ability to read/write custom &#8220;app&#8221; preferences to storage. See APIs <a href=https://docs.coronalabs.com/api/library/system/getPreference.html target="_blank">system.getPreference()</a>, <a href=https://docs.coronalabs.com/api/library/system/setPreferences.html target="_blank">system.setPreferences()</a>, and <a href=https://docs.coronalabs.com/api/library/system/deletePreferences.html target="_blank">system.deletePreferences()</a>.</li>
<li>Android: Fixed a potential crash that can occur when an app with notification permissions is updated to remove said permissions. Casenum 40070.</li>
<li>Windows: Fixed bug where &#8220;mouse&#8221; event would not provide a double right click or double middle click&#8217;s 2nd down phase.</li>
<li>macOS, Windows: fix issue with app sometimes exiting when a build is requested. No casenum.</li>
<li>Core: Fixes crash caused by an out-of-range frame index for Image Sheets when used with <a href=https://docs.coronalabs.com/api/library/display/newImage.html target="_blank">display.newImage()</a>. Now it will display a warning message and default to the last frame in the Image Sheet (same behavior as with <a href=https://docs.coronalabs.com/api/library/display/newImageRect.html target="_blank">display.newImageRect()</a>). Casenum: 47013.</li>
<li>Physics: Fixed debug draw mode to show the real position of physics bodies in groups that have been scaled or translated. This doesn&#8217;t fix the issue with using physics objects in groups but will display the true location of the physics body in relation to the display object. Casenum: 46663.</li>
<li>Windows, macOS: display a message in the console if an app closes because <a href=https://docs.coronalabs.com/api/library/native/requestExit.html target="_blank">native.requestExit()</a> was called. No casenum.</li>
<li>Android: Fixed an issue where setting the <code>minSdkVersion</code> in <code>build.settings</code> could only go as high as API Level 21 (Android 5.0). Now this can be set as high as API Level 23 (Android 6.0).</li>
<li>Android &#8211; Enterprise: Added new APIs for interacting with packages on Android devices (PackageServices). These can be used to quickly tell if a package is installed and enabled on a device.</li>
<li>Core: fixing new display objects not triggering scene update after <code>display.save()</code>.</li>
<li>macOS: Handle hung iOS device installs correctly. No casenum.</li>
<li>Updated viewer subrepo to latest version.</li>
<li>Core: fixing culling offscreen objects with <code>display.save()</code>. Casenum 43011.</li>
<li>Enterprise: fix issue with signing apps. No casenum.</li>
<li>iOS: tweaks for iOS 10 beta.</li>
<li>OS X: Support builds against iOS/tvOS 10.0 beta.</li>
<li>Core: fixing crash when using TextureResourceCanvas as mask. Hit testing doesn&#8217;t work for these masks.</li>
<li>Core: fixing TextureResourceCanvas not invalidating if released in same frame.</li>
<li>Core: tweaking warning messages when fill images contain invalid data.</li>
<li>Core: fixing containers sometimes affecting masked objects (casenum 46668).</li>
<li>Core: fixing crash when changing masks within frame (casenum 46685).</li>
<li>Windows: Improved clarity of text in top-right corner of the Welcome window (was blurry).</li>
<li>Add total elapsed time to the &#8220;build succeeded&#8221; line for all build types.</li>
<li>OS X, Windows: change build process to download built app directly from S3 to improve build latencies. No casenum.</li>
<li>tvOS Enterprise: fixing various issues with bitcode.</li>
<li>OS X: improve dafaults for Build dialog. Casenum 44272.</li>
<li>Make the location of the output archive more deterministic.</li>
<li>OS X: improve logging performance under some circumstances. No casenum.</li>
<li>Fix issue with some iOS plugin builds.</li>
<li>OS X, Windows: improve unconfigured plugins warning message. No casenum.</li>
<li>Android: Fixed an issue introduced in build 2016.2825 where <a href=https://docs.coronalabs.com/api/library/media/selectPhoto.html target="_blank">media.selectPhoto()</a> and <a href=https://docs.coronalabs.com/api/library/media/selectVideo.html target="_blank">media.selectVideo()</a> would fail on devices older than Android 4.1. Casenum 46579.</li>
<li>OS X: don&#8217;t warn incorrectly about plugins in Desktop apps. Casenum 46336.</li>
<li>OS X: fix issue with downloading very large apps during builds. No casenum.</li>
<li>OS X: fix performance issues with native controls and mouse cursor on some computers. Casenum 46495.</li>
<li>OS X: fix issue with running Simulator on OS X 10.9. No casenum.</li>
<li>Remove references to <code>[NSString constainsString:]</code> and replace with <code>[NSString+Extensions contains:]</code>.</li>
<li>OS X: stop mouse and location events firing when Simulator is suspended. Casenums 46574, 44126.</li>
<li>OS X: don&#8217;t include <code>build.settings</code> in built app. No casenum.</li>
<li>Android &#8211; Enterprise: Maintenance.</li>
<li>Android &#8211; Enterprise: Fixed an issue where <code>PermissionsServices.findAllPermissionsInManifestForGroup()</code> would return null if a permission was requested that doesn&#8217;t exist on the device, e.g. <code>"com.sec.android.provider.badge.permission.READ"</code> on a non-Samsung device. Casenum 46616.</li>
<li>Android: <a href=https://docs.coronalabs.com/api/library/system/hasEventSource.html target="_blank">system.hasEventSource(&#8220;heading&#8221;) </a>no longer assumes all Android devices have compass hardware.</li>
<li>tvOS: adding <a href=https://docs.coronalabs.com/api/library/native/showPopup.html target="_blank">native.showPopup(&#8220;appStore&#8221;)</a>; fixing error message for iOS.</li>
<li>iOS Enterprise: added <code>CoronaEventDataKey()</code>.</li>
</ul>
<h3>Conclusion</h3>
<p>Corona Labs is committed to bringing you the best 2D programming platform on the market. If you would like to discuss this release, please join us in our <a href=https://forums.coronalabs.com/ target="_blank">Community Forums</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Submitting apps to Apple&#8217;s iTunes Connect</title>
		<link>/blog/2016/09/14/submitting-apps-to-apples-itunes/</link>
		<pubDate>Wed, 14 Sep 2016 20:46:09 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[Corona SDK]]></category>
		<category><![CDATA[Daily Build]]></category>
		<category><![CDATA[iOS]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[tvOS]]></category>

		<guid isPermaLink="false">/?p=68058</guid>
		<description><![CDATA[Great news! Corona developers can submit to Apple's iTunes Connect again. Read further to get the details.]]></description>
				<content:encoded><![CDATA[<p><img class="alignright wp-image-58813" style="margin: 0px 0px 20px 20px;" src="/wordpress/wp-content/uploads/2014/06/apple-129x150.jpg" alt="Apple logo" width="100" height="116" />Great news! Corona developers can submit to Apple&#8217;s iTunes Connect again, but doing so requires <a href=https://developer.coronalabs.com/downloads/daily-builds/ target="_blank">Daily Build 2016.2948</a> or later.</p>
<p>To better outline the context of this: When Apple enabled iOS 10 submissions following their September 7, 2016 keynote event, one of the updates was additional automatic scanning of files in the app bundle to detect potential issues. With this new process in place, everyone who submitted a Corona Simulator or Corona Enterprise build started getting a failure message from Apple due to problems with &#8220;app thinning.&#8221;</p>
<p>Our engineers have been working tirelessly to discover the root cause of the problem and deliver a solution to Corona developers. Essentially, Apple is now scanning files with an extension that they were not previously looking at. Corona&#8217;s products used that extension for our internal files and it suddenly started being flagged as problematic. We have switched to a name-spaced extension that should not cause this issue in the future.</p>
<p><strong>Remember, these fixes are only available in <a href=https://developer.coronalabs.com/downloads/daily-builds/ target="_blank">Daily Build 2016.2948</a> and later</strong> &#8212; you will have to update to this build in order to submit your apps to Apple.</p>
<p>Thank you to everyone who reported issues and provided additional details. Your assistance and patience is truly appreciated!</p>
]]></content:encoded>
			</item>
		<item>
		<title>Android Studio templates now available for Corona Enterprise</title>
		<link>/blog/2016/05/25/android-studio-templates-now-available-for-corona-enterprise/</link>
		<comments>/blog/2016/05/25/android-studio-templates-now-available-for-corona-enterprise/#comments</comments>
		<pubDate>Wed, 25 May 2016 20:23:09 +0000</pubDate>
		<dc:creator><![CDATA[ajay]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[Daily Build]]></category>
		<category><![CDATA[android]]></category>
		<category><![CDATA[Android Studio]]></category>
		<category><![CDATA[Corona Enterprise]]></category>

		<guid isPermaLink="false">/?p=66638</guid>
		<description><![CDATA[Android Studio support for Corona Enterprise is here! Read further to learn how Android Studio can benefit your development.]]></description>
				<content:encoded><![CDATA[<p>As of <a href=https://developer.coronalabs.com/downloads/daily-builds/ target="_blank">Daily Build 2016.2886</a>, Android and iOS development for Corona Enterprise are finally on equal footing; Android Studio support for Corona Enterprise is here!</p>
<p>Google released Android Studio 1.0 as the official IDE for Android Development in December 2014. This change brought several useful tools to the Android development landscape, but focused around the development of standard Android applications.</p>
<p>For Corona Enterprise on Android, we simply relied on the Android command line tools and custom scripts for doing Enterprise development; no IDE integration whatsoever. This left Android Enterprise developers with very few tools to iterate on code quickly and the whole process more painful than it had to be.</p>
<h3>What about the old project model?</h3>
<p>Just as Google moved away from the Ant build system, so are we. Android Studio is the present and future; this is where we want to be.</p>
<p>Now that Android Studio templates are available, <strong>the Ant project templates have been deprecated</strong> and all new Enterprise projects should use Android Studio.</p>
<p>Despite being deprecated, documentation for using Enterprise with the Ant build system will still be available through around September or October of this year.</p>
<h3>Getting started with Android Studio</h3>
<p>If you&#8217;re new to Corona Enterprise or Android Studio, see our <a href=https://docs.coronalabs.com/daily/native/android/prereqs.html target="_blank">Android Prerequisites</a> guide for instructions on how to set up Android Studio for Corona Enterprise development.</p>
<h3>Migrating to Android Studio</h3>
<p>For existing Android Enterprise projects, see our <a href=https://docs.coronalabs.com/native/android/androidStudio/index.html>Migration to Android Studio</a> guide. We will be <strong>dropping support for the Ant project model </strong>in the coming months. Specifically, the public release in <strong>September/October</strong> will mark the end of Ant project support for Corona Enterprise. Please have all of the Enterprise apps that you&#8217;ll continue to support migrated by this time.</p>
<h3>How Android Studio makes development easier</h3>
<p>Android Studio brings several useful tools that make the Android Enterprise developer&#8217;s life much easier. Some of these include:</p>
<h4>Code completion</h4>
<p>Can&#8217;t remember what that exact Android API was? No problem – Android Studio&#8217;s got you covered!</p>
<h4>Static Code Analyzer</h4>
<p>This handy tool can inspect Java code throughout your project and help you catch possible bugs, simplify complex code snippets, find coding style issues, typos, and so much more. We highly recommend giving this a run via Analyze → Inspect Code&#8230;</p>
<h4>JAR Decompilation</h4>
<p>Ever been in a situation where your app is crashing inside some library that you don&#8217;t have the source code to? Assuming that library isn&#8217;t obfuscated with ProGuard, the JAR decompilation tool will let you take a peek into the implementation for better understanding of the library.</p>
<h4>Integrated support for Android Virtual Device (AVD) testing</h4>
<p>While it was possible to test out Corona Enterprise projects using Android Virtual Devices (AVDs) before, Android Studio makes this significantly better by offering improved performance and easy integration into the IDE.</p>
<p>Testing with AVDs does come with some caveats you should be aware of:</p>
<ul>
<li>Since Corona is built with the ARMv7 architecture in mind, be sure to <strong>only</strong> use system images with ABI: <strong>armeabi-v7a</strong>.</li>
<li>AVDs do <strong>not </strong>have Google Play installed on them. This means that testing things like Google Licensing, Expansion Files, or IAP cannot be done in AVDs.</li>
<li>AVDs are a little slow to boot. Be patient and don&#8217;t accidentally close one AVD after running a single test.</li>
</ul>
<h4>No more command line</h4>
<p>You can now do all building, deployment, and view logcat through Android Studio. No need for shell scripts!</p>
<h4>No guessing at API Levels for Android APIs</h4>
<p>Android Studio warns you if you use an API that was introduced later than your <code>minSDKVersion</code>. No more redesigning for older Android versions at the last minute.</p>
<h4>Easier integration of common external libraries</h4>
<p>While this doesn&#8217;t apply to libraries that are only distributed as JAR files, Android Studio makes it significantly easier to add things like the Android Support libraries and Google Play Services to your projects.</p>
<p>A simple line in the dependencies block of your <code>build.gradle</code> script it all it takes for adding in whichever version of the Android Support libraries you desire:</p><pre class="crayon-plain-tag">dependencies {
    ...
    compile 'com.android.support:appcompat-v7:23.3.0'
}</pre><p>For Google Play Services, you can even <a href=https://developers.google.com/android/guides/setup?#add_google_play_services_to_your_project>select which components of it</a> to compile into your app. This is especially helpful if your app is getting close to the <a href=http://developer.android.com/tools/building/multidex.html?#about>method reference limit</a> for a single dex file.</p>
<h4>Multi-dex support is now easy as pie</h4>
<p>This can now be added to Corona Enterprise projects using the simple steps outlined by Google <a href=http://developer.android.com/tools/building/multidex.html target="_blank">here</a>.</p>
<h3>Testimonials</h3>
<p>Still not convinced that Android Studio is the best thing since sliced bread? Read these testimonials from our engineers:</p>
<ul>
<li><em>&#8220;I don&#8217;t have to switch between Sublime Text and the Terminal 200 times a day now!&#8221;</em> — Danny Glover</li>
<li><em>&#8220;It&#8217;s like Xcode for Android&#8230;.but better.&#8221;</em> — Ingemar Bergmark</li>
<li><em>&#8220;The only disadvantage of using Android Studio over the old Ant method is&#8230; oh, well, there is none.&#8221;</em> — Sergey Lerg</li>
</ul>
<h3>Regarding AVD testing</h3>
<p>If you&#8217;re giving AVD testing a try for the first time with Android Studio, there are some best practices you should be aware of:</p>
<p>You <strong>should </strong>use AVD testing for:</p>
<ul>
<li><strong>Testing UI on form factors that aren&#8217;t readily available to you.</strong> While Google&#8217;s <a href=https://developers.google.com/cloud-test-lab/overview>Android Cloud Test Lab</a> does allow some form of UI testing, you&#8217;ll be able to iterate faster using AVDs.</li>
<li><strong>Testing with OS versions that aren&#8217;t readily available to you.</strong> If your app is using some APIs or features that aren&#8217;t available on all the API Levels you support, this is a good way to quickly test behaviors on any questionable API levels.</li>
<li><strong>Testing situations that are difficult to set up on actual devices.</strong> The emulator that AVDs run in allow you to mock up situations that may be more difficult to test on real hardware. For example, you can mock up the battery state and phone calls.</li>
</ul>
<p>You <strong>should not</strong> use AVD testing for:</p>
<ul>
<li><strong>Performance testing.</strong> Because this is an emulated environment, the performance you see with an AVD is not the same as what you&#8217;ll see on real hardware. For bigger apps, testing in this manner may not produce usable/practical results.</li>
<li><strong>As a substitute for on-device testing.</strong> You should make sure your app works on a plethora of actual hardware before submitting it anywhere.</li>
</ul>
<p>For more info, consult Google&#8217;s <a href=http://developer.android.com/tools/devices/managing-avds.html>Managing AVDs with the AVD Manager</a> Guide.</p>
]]></content:encoded>
			<wfw:commentRss>/blog/2016/05/25/android-studio-templates-now-available-for-corona-enterprise/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Developer Profile: QuizTix</title>
		<link>/blog/2016/01/19/developer-profile-quiztix/</link>
		<comments>/blog/2016/01/19/developer-profile-quiztix/#comments</comments>
		<pubDate>Tue, 19 Jan 2016 17:59:28 +0000</pubDate>
		<dc:creator><![CDATA[Rob Miracle]]></dc:creator>
				<category><![CDATA[Case Study]]></category>
		<category><![CDATA[Case Study - Game Studios]]></category>
		<category><![CDATA[Corona native builds]]></category>
		<category><![CDATA[Game Development]]></category>
		<category><![CDATA[app development]]></category>
		<category><![CDATA[workflow]]></category>

		<guid isPermaLink="false">/?p=65262</guid>
		<description><![CDATA[Occasionally we have the pleasure of highlighting Corona Developers who are doing great things with Corona SDK. This week we would like to introduce you to QuixTix, a small London based studio, founded by Ian Masters and Albert Marshall.]]></description>
				<content:encoded><![CDATA[<p><img class="alignright size-medium wp-image-65269" src="/wordpress/wp-content/uploads/2016/01/Founders_IanAlbert-300x200.jpg" alt="Founders_Ian&amp;Albert" width="300" height="200" />Occasionally we have the pleasure of highlighting Corona Developers who are doing great things with Corona SDK.</p>
<p>This week we would like to introduce you to QuixTix, a small London based studio, founded by Ian Masters and Albert Marshall.</p>
<p>QuizTix uses Corona Enterprise to produce a series of quiz games, including a BBC branded edition called QuizTix: BBC Comedy Genius, which lets you pit your wits against comedy fans via leaderboards to become the brains of British comedy.</p>
<p>Here’s what Alan, QuizTix&#8217;s star coder, had to say about using Corona SDK to develop their apps.</p>
<h3>Introducing QuizTix</h3>
<p>In 2013, <a href=http://quiztix.co/ target="_blank">QuizTix</a> was founded with the aim of creating a series of family-friendly themed quiz games. The team all had previous experience using <a href=/products/corona-sdk/ target="_blank">Corona SDK</a> so it was our first choice for QuizTix, because of how easily we can create new content.</p>
<p>So much of the &#8216;core&#8217; is taken care of for us that we can concentrate on game play which is where we really wanted to be focusing our attention. However we knew that Corona SDK did not have some functionality that we crucially needed (such as offline builds), and so we looked into <a href=/products/enterprise/ target="_blank">Corona Enterprise</a>.</p>
<p>Thanks to Corona Enterprise, we have seven QuizTix games out now:</p>
<ul>
<li><a href=https://itunes.apple.com/gb/app/quiztix-pop-music-quiz/id815117943?mt=8 target="_blank">QuizTix: Pop Music</a></li>
<li><a href=https://itunes.apple.com/gb/app/quiztix-movies-quiz/id815118690?mt=8 target="_blank">QuizTix: Movies</a></li>
<li><a href=https://itunes.apple.com/gb/app/quiztix-world-football-quiz/id839727240?mt=8 target="_blank">QuizTix: World Football</a></li>
<li><a href=https://itunes.apple.com/gb/app/quiztix-video-games-quiz/id815122318?mt=8 target="_blank">QuizTix: Video Games</a></li>
<li><a href=https://itunes.apple.com/gb/app/quiztix-musicals-quiz/id836007687?mt=8 target="_blank">QuizTix: Musical</a></li>
<li><a href=https://itunes.apple.com/gb/app/quiztix-bbc-comedy-genius/id1015985090?mt=8 target="_blank">QuizTix: BBC Comedy Genius</a></li>
<li><a href=https://itunes.apple.com/gb/app/quiztix-international-rugby/id1015985491?mt=8 target="_blank">QuizTix: International Rugby</a></li>
</ul>
<p>We met the BBC at GDC in 2015 (a long way to go to meet someone from London!) and approached them with the idea about the game. The idea of QuizTix has always been to partner with brands to create new versions of QuizTix. We can offer proven game play and exceptional engagement. While the experience is QuizTix, the brand is the real content.</p>
<h3><img class="alignnone size-large wp-image-65270" src="/wordpress/wp-content/uploads/2016/01/promo_1024x500-1024x500.png" alt="promo_1024x500" width="750" height="366" /></h3>
<h3>Why Corona Enterprise?</h3>
<p>A deliberate decision was made to have a separate app for each theme in order to make each game appeal to people who particularly enjoy that subject rather than just being marketed as a general quiz app.</p>
<p>One of the biggest challenges that this created was that we needed a project structure with a single code base which could be used to create multiple apps, in order to minimize development and testing time.</p>
<p>Each game would contain its own unique questions, artwork and audio but changes to the core game mechanics would be applied to all games. This would allow us to release new games with fresh content at a much faster rate, whilst always keeping the existing games up-to-date with the latest features</p>
<p>The most important functionality we needed was the ability to build all versions of the game with a single command. While it&#8217;s a simple enough process to build a single APK / IPA using Corona SDK, it does not have the ability to build two games at once.</p>
<p>Seeing as we currently have seven versions of QuizTix out already and with more on the way, that would mean: Loading one game in the sim, build for iTunes, build for Google Play, build for Amazon. Rinse and repeat six more times!</p>
<p>Corona Enterprise gave us the option to build from the command line. This allows us to create scripts which can build many builds at once, in different configurations (e.g. Google Play builds for all games, iOS+GooglePlay+Amazon builds for a single game). Since the simulator does not get used at all for offline builds, we can continue working while waiting for the builds to complete.</p>
<p>Using Enterprise also allowed us to develop our own plug-ins. This has allowed us to test out many SDKs that we otherwise would not have had access to, which has been essential for monetization/anayltics/etc. QuizTix is targeted at a super casual audience our focus is on monetizing all players via high quality, responsible and largely unobtrusive ads. We have worked hard on finding the best partners to get great fill and eCPM’s.</p>
<h3>Additional tools</h3>
<p><img class="alignright wp-image-65271 size-medium" src="/wordpress/wp-content/uploads/2016/01/iPhone6_4-169x300.png" alt="iPhone6_4" width="169" height="300" />Keeping the overall file size as low as possible was very important to us, as it can be a significant factor when trying to achieve downloads in markets with lower internet speeds or data caps. To facilitate this, we integrated a number of other tools into our build system, with very little effort required:</p>
<p><strong><a href=https://www.codeandweb.com/texturepacker target="_blank">TexturePacker</a></strong> &#8211; This has a command line implementation so by putting artwork into separate folders in our source folders, we can pack them into single texture images. This allows us to save on memory usage by packing all game characters into a single PNG. Corona already has built-in functions to then use each image from the texture sheet, so it&#8217;s a great way to save space.</p>
<p><a href=http://www.mapeditor.org/ target="_blank"><strong>Tiled</strong></a> &#8211; Similarly we use Tiled to create the background for our game, which packs the background into a map in exactly the same way as TexturePacker but allows us to place the background tiles in a nice GUI.</p>
<p><strong><a href=http://www.imagemagick.org/script/index.php target="_blank">ImageMagick</a></strong> &#8211; One of the more time consuming parts of asset creation for us was exporting multiple sizes to account for devices with differing resolutions. While it&#8217;s not a huge problem to create a single image, then an @2x and @4x version, when those images then need tweaking and new images need to be made the time quickly adds up. We implemented ImageMagick so that we can just include the highest resolution images in our source folders, and then have ImageMagick create the lower resolution versions.</p>
<p><strong>PNG Compression</strong> &#8211; Even using TexturePacker, we knew we could reduce the size of our app down further. We use a PNG compression tool called <a href=https://pngquant.org/ target="_blank">PNGQuant</a> to convert all images from 24bit to 8bit color. This reduces the file size to around 1/3 of its original size (e.g. one image I&#8217;ve just picked at random went from 201KB to 72KB). This helped us to get closer to our goal of bringing the file size of each app down to ~20MB. This works for us because our game has a cartoony look, however if your game contains photos then it may not work quite so well.</p>
<p><strong>Audio Compression</strong> &#8211; like the artwork, we keep full size audio files in our source folders, but copy and process them into the final project folders in order to reduce the file size.</p>
<p>We also made the decision to convert the files to mono, as many mobile devices have a single speaker and so do not benefit from stereo sound files.</p>
<p>Generally we use WAVs as the source file, and then convert to Oggs for Android, and CAF for iOS. OSX has a built in audio conversion tool called <a href=https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/afconvert.1.html target="_blank">afconvert</a>. For Android we downloaded a tool called <a href=http://www.rarewares.org/ogg-oggenc.php target="_blank">oggenc</a>.</p>
<p>There are a few more tools we have used alongside Enterprise, separately from our main build script process. Most of these could be used with Corona SDK projects, but are still worth a mention due to how useful they are.</p>
<p><a href=http://esotericsoftware.com/ target="_blank"><strong>Spine</strong></a> &#8211; This has made character animations significantly easier, and they look better than if we had tried to create them in code using transitions.</p>
<p><a href=https://git-scm.com/ target="_blank"><strong><img class="size-medium wp-image-65274 alignright" src="/wordpress/wp-content/uploads/2016/01/iPhone6_2-169x300.png" alt="iPhone6_2" width="169" height="300" />Git</strong></a> &#8211; I cannot emphasize how important good version control is, especially if multiple people are working on the project.</p>
<p>Many people start out by simply duplicating their project folder when they reach a safe point, which is &#8220;ok&#8221; for a small project with one developer.</p>
<p>Using Git/<a href=https://www.mercurial-scm.org/ target="_blank">Mercurial</a>/something similar is fantastic because it allows you to do things like:</p>
<ul>
<li>Have 2 people working on different parts of the same file, Git will then work out what changed and attempt to merge both peoples work.</li>
<li>Go back in time! If you use a nice GUI tool like <a href=https://www.sourcetreeapp.com/ target="_blank">SourceTree</a>, you can see a long list of all the changes you have committed. This is great because sometimes you know you changed a file, but don&#8217;t remember what it looked like before, or when you changed it. You can search back through the file&#8217;s history to find what changed.</li>
<li>*Create &#8216;branches&#8217; which allows you to say &#8220;leave the current project as it is, but create a separate line of changes from this point&#8221;. This is handy if you want to test a new library without risking the stable working version of the project for other people.</li>
</ul>
<p><strong><a href=https://aws.amazon.com/s3/ target="_blank">Amazon S3</a></strong> &#8211; Sometimes we make changes to the game that we do not feel require an update (e.g. fixing a typo), but would still prefer were in the game as soon as possible. We use Amazon S3 to store images and files which contain strings/values/etc which are used in the game. This allows us to fix small issues in the game by updating the S3 files, which are then pulled into the app on startup. Obviously you would need to include a hard-coded copy of these files for times when no internet connection is available.</p>
<h3>Challenges</h3>
<p>In terms of limitations, I would say the biggest hurdles we&#8217;ve encountered with Enterprise is that you need to have an understanding of how iOS and Android native development works.</p>
<p>The sample projects should help you out a lot on this front, and dare I say that with a bit of playing around everyone should be able to get the basics working in a short time.</p>
<p>Some things may seem confusing at first. For instance, with Enterprise you do not add plug-ins to your build.settings file, you add their files manually and will often need to add details to other files such as AndroidManifest.</p>
<p>However, you&#8217;ll quickly realize that this is a small price to pay for the freedom it gives you. Enterprise really is a way of creating native projects that let you use Corona&#8217;s Lua libraries to make game creation easier.</p>
<p>We are at the point where we can release new versions quicker each time!  Going forward we can only see Enterprise making it easier for us to continue this way.</p>
<p>So if any developers out there are on the fence about whether Enterprise would be useful, for us it’s a no-brainer, but I would recommend re-reading some of the advantages &amp; disadvantages I&#8217;ve pointed out. The Corona staff and forum community are always extremely helpful if you need any more guidance.</p>
<h3>Success</h3>
<p>The players over the seven titles have answered questions more than 30 million times and that&#8217;s very attractive to brands looking to find a place in the mind&#8217;s of consumers.</p>
]]></content:encoded>
			<wfw:commentRss>/blog/2016/01/19/developer-profile-quiztix/feed/</wfw:commentRss>
		<slash:comments>10</slash:comments>
		</item>
	</channel>
</rss>
