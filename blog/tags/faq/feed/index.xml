<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>FAQ &#8211; Corona Labs</title>
	<atom:link href="/blog/tags/faq/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Mon, 19 Oct 2020 12:16:12 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.8</generator>

<image>
	<url>/wordpress/wp-content/uploads/2017/06/cropped-icon_32x32@2x-32x32.png</url>
	<title>FAQ &#8211; Corona Labs</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Wednesday FAQs: Java and Windows Simulators</title>
		<link>/blog/2013/05/15/wednesday-faqs-java-and-windows-simulator/</link>
		<comments>/blog/2013/05/15/wednesday-faqs-java-and-windows-simulator/#comments</comments>
		<pubDate>Wed, 15 May 2013 17:06:58 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
				<category><![CDATA[FAQ]]></category>
		<category><![CDATA[android]]></category>
		<category><![CDATA[Corona SDK]]></category>
		<category><![CDATA[java]]></category>

		<guid isPermaLink="false">http://blog.coronalabs.com/?p=34017</guid>
		<description><![CDATA[It's Wednesday and time for another frequently asked questions (FAQs) session. Here are some FAQs about Java and the Windows Simulator.]]></description>
				<content:encoded><![CDATA[<p><img src="http://blog.coronalabs.com/wp-content/uploads/2013/01/FAQ.png" alt="FAQ Icon" class="alignright size-full wp-image-28552" />It&#8217;s Wednesday and time for another frequently asked questions (FAQs) session. Here are some FAQs about Java and the Windows Simulator.</p>
<h2>1. Java 7 is the most recent version of Java, why does Corona SDK require Java 6?</h2>
<p>Developing for Android requires Java 6, not Java 7 (according to the <a href=http://developer.android.com/index.html>Android site</a>). Corona SDK uses the Java tools for signing the APK, so we have the same requirements as if you were doing native Android development.</p>
<p>When you run Corona SDK and try to do a build, it checks to see if Java 6 is installed. If it doesn&#8217;t find Java 6, you will be prompted to install Java 6.</p>
<p>Note: Starting with Build 1103, we found a way to make Corona SDK run with Java 7, so now both the Mac and Windows Simulators can run with either Java 6 or Java 7 installed.</p>
<h2>2. I keep getting a message on my Windows machine saying Java wants to update my Java (6) to Java 7. Should I upgrade?</h2>
<p>If you are running the public build (971 or 1076), we don&#8217;t recommend running the Java updater because it may remove the JRE 6 binary files, causing Corona SDK build errors.</p>
<h2>3. I can&#8217;t build for Android &#8212; the &#8220;Key Alias&#8221; field is empty</h2>
<p>This generally means the Java 6 install is damaged. You will also get <strong>&#8220;keystore password not valid&#8221;</strong> error if you browse and select the <strong>debug keystore</strong> shipped with Corona SDK.</p>
<p>This can happen if you try to install Java 7 over Java 6 and the Java updater removes the JRE 6 (Java Runtime) binary files. We have seen this happen when you run Java (7) Updater 45. See question 5 for how to restore JRE 6.</p>
<h2>4. I can&#8217;t build for Android &#8212; I get a &#8220;Could not load &#8230;/jvm.dll, error 126&#8221; message.</h2>
<p>We added support for Java 7 in Build 1093 but it only worked correctly if you installed Java JDK7 from Oracle&#8217;s website. We found if you installed Java 7 using the Updater 45, it would remove a key DLL file, causing the above error message when trying to do a build in the Windows simulator. The solution is to use Build 1103, which now properly locates the DLL file. (This turned out to be a known Java Updater bug.)</p>
<h2>5. I&#8217;ve installed Java 7 so how do I get Corona SDK Build 1076 working again?</h2>
<p>Installing the Java 7 Updater removes the JRE 6 binary files but leaves the JRE 6 key in the Windows Registry making Corona SDK think Java 6 is installed. The solution is to re-install Java 6 JRE files. You can download JRE 6 <a href=http://www.oracle.com/technetwork/java/javase/downloads/jre6downloads-1902815.html>here</a>. Make sure you pick the 32-bit version for Windows (Windows X86).</p>
<p>Once you&#8217;ve run the Java 7 Updater and re-installed the JRE 6 files, you can build with both the public releases and the latest Corona SDK Daily Builds (starting with Build 1103).</p>
<p>That&#8217;s it for today&#8217;s questions. I hope you enjoyed them and even learned a few things!</p>
]]></content:encoded>
			<wfw:commentRss>/blog/2013/05/15/wednesday-faqs-java-and-windows-simulator/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Wednesday FAQs: Miscellaneous Questions</title>
		<link>/blog/2013/04/24/faq-wednesday-miscellaneous-questions/</link>
		<comments>/blog/2013/04/24/faq-wednesday-miscellaneous-questions/#comments</comments>
		<pubDate>Wed, 24 Apr 2013 23:19:37 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
				<category><![CDATA[FAQ]]></category>
		<category><![CDATA[corona]]></category>
		<category><![CDATA[CoronaSDK]]></category>
		<category><![CDATA[network]]></category>
		<category><![CDATA[Widgets]]></category>

		<guid isPermaLink="false">http://blog.coronalabs.com/?p=32583</guid>
		<description><![CDATA[It's Wednesday and time for another FAQ session. Here are some frequently asked questions (FAQ).]]></description>
				<content:encoded><![CDATA[<p><img src="http://blog.coronalabs.com/wp-content/uploads/2013/01/FAQ.png" alt="FAQ Icon" class="alignright size-full wp-image-28552" />It&#8217;s Wednesday and time for another FAQ session. Here are some frequently asked questions (FAQ).</p>
<h2>1. Why doesn&#8217;t native.setActivityIndicator work in my code?</h2>
<p><strong>native.setActivityIndicator</strong> cannot be set and cleared in the same code chunk. All display objects (including native objects) are not rendered on the screen until the code chunk ends.</p>
<p>The following is the wrong way to set the Activity Indicator. The activity indicator is not set until AFTER the function ends, and then it&#8217;s cleared. (Note: There is a current bug in Android where the activity indicator does not turn off in this example.)</p>
<p></p><pre class="crayon-plain-tag">native.setActivityIndicator( true )
for i = 1, 1000 do
    print( &quot;i = &quot; .. i )
end
native.setActivityIndicator( false )</pre><p></p>
<p>This is the right way to set the Activity Indicator. The indicator is cleared after one second. The problem with this approach is the activity indicator is set after the <strong>for loop</strong> executes so it&#8217;s not displaying the activity indicator during the time the <strong>for loop</strong> is running.</p>
<p></p><pre class="crayon-plain-tag">native.setActivityIndicator( true )
for i = 1, 1000 do
    print( &quot;i = &quot; .. i )
end

-- Turn off the indicator after one second
timer.performWithDelay( 1000, function() native.setActivityIndicator( false ) end )</pre><p></p>
<p>The solution to the above problem would be running the <strong>for loop</strong> code in a timer function. You start the activity indicator before the timer starts and turn off the activity indicator in the timer function.</p>
<p></p><pre class="crayon-plain-tag">native.setActivityIndicator( true )
timer.performWithDelay( 100,
    function()
        for i = 1, 1000 do
            print( &quot;i = &quot; .. i )
        end
        native.setActivityIndicator( false )
    end
)</pre><p></p>
<h2>2. I&#8217;m using Dynamic Scaling and don&#8217;t see native textField and textBox font sizes changing when I test on different devices.</h2>
<p>When you specify the target screen size in <strong>config.lua</strong>, this allows display objects to scale depending on the native screen size of the device. The one exception is fonts used in native text fields. The fonts don&#8217;t automatically scale so the font size needs to be adjusted manually. You can determine the correct size by either reading the device type (using <strong>system.getInfo( &#8220;model&#8221; )</strong>) or reading the scaling factor of the device (<strong>display.contentScaleX</strong> and <strong>display.contentScaleY</strong>). For Android, we recently added some new <strong>system.getInfo</strong> API calls in our Daily builds that may help: <strong>&#8220;androidDisplayWidthInInches&#8221;</strong>, <strong>&#8220;androidDisplayHeightInInches&#8221;</strong>, <strong>&#8220;androidDisplayXDpi&#8221;</strong>, and <strong>&#8220;androidDisplayYDpi&#8221;</strong>.</p>
<h2>3. My network.request calls are no longer working starting with build 1076. What happen?</h2>
<p>Starting with build 1053 we added a default <strong>Content-Type</strong> field of &#8220;text/plain&#8221; for all platforms. This was done to be consistent among the platforms. Before build 1053 we relied on the OS to provide the <strong>Content-Type</strong> field if it was missing from the <strong>network.request</strong>. If your <strong>network.request</strong> contains a <strong>parms.bodyType</strong> equal to &#8220;binary&#8221;, or your <strong>parms.body</strong> contains a table (specifying filename), <strong>Content-Type</strong> will be set to &#8221; application/octet-stream&#8221;. If your <strong>network.request</strong> specifies a value for <strong>Content-Type</strong>, it will override the default value. In all other cases it will be set to &#8220;text/plain&#8221;.</p>
<p></p><pre class="crayon-plain-tag">-- Example code to log in with username/password

local function networkListener( event )
    print( &quot;networkListener called&quot;, event.response )
end

local user = &quot;myName&quot;
local password = &quot;abc&quot;

local headers = {}
headers[&quot;Content-Type&quot;] = &quot;application/x-www-form-urlencoded&quot;

local body = &quot;login=&quot;..user..&quot;&amp;password=&quot;..password
local params = {}
params.headers = headers
params.body = body
-- go to http://requestb.in/ to set up an test page
network.request(&quot;http://requestb.in/&quot;, &quot;POST&quot;, networkListener, params )</pre><p></p>
<h2>4. Display.save now shows a white background in the saved image. The background use to be black.</h2>
<p>We had a blending issue with <strong>display.save</strong> captures and it was fixed by making the background full alpha behind the objects being saved. This changed occurred in build 1079. If you are saving a group, the background will be transparent, which is undefined. Before 1079 we made the background black, which was causing problems for some users. Now the transparent areas may show up as either black or white when saving to a .JPEG file. If you save it to a .PNG file (which <strong>display.save</strong> now supports), the background will be transparent and take on the existing background when displayed.</p>
<p>Specifying a .PNG file in <strong>display.save</strong> is one solution to the problem when saving a group. The other is creating a black <strong>display.newRect</strong> the size of your group and filling it with black and inserting it behind all your other group objects. You do this before calling <strong>display.save</strong> and remove the newRect object afterwards.</p>
<h2>5. I&#8217;m using the released version of Corona SDK and seeing bugs in Widgets. What can I do?</h2>
<p>The good news is we decided to open-source our Widgets 2.0 library. We have put the library up on <a href=https://github.com/coronalabs/>GitHub</a> that you can include in your own project. This is the same code we include in our Daily Builds and our plan is to keep both in sync. This means Starters, who don&#8217;t have access to our Daily Builds, can still use the latest Widget library. If you do find a Widget bug, please submit a bug report and a small test project demonstrating the bug. In the report please mention the Corona build you&#8217;re using and which version of the Widget library you&#8217;re reporting. Get more information <a href=http://forums.coronalabs.com/topic/34183-widgets-20-open-source/?hl=github>here</a></p>
<p>That&#8217;s it for today&#8217;s questions. I hope you enjoyed them and even learned a few things.</p>
]]></content:encoded>
			<wfw:commentRss>/blog/2013/04/24/faq-wednesday-miscellaneous-questions/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Wednesday FAQs: Corona Bug Reports</title>
		<link>/blog/2013/03/27/wednesday-faq-corona-bug-reports/</link>
		<comments>/blog/2013/03/27/wednesday-faq-corona-bug-reports/#comments</comments>
		<pubDate>Wed, 27 Mar 2013 17:50:47 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
				<category><![CDATA[FAQ]]></category>
		<category><![CDATA[bugs]]></category>
		<category><![CDATA[corona]]></category>
		<category><![CDATA[CoronaSDK]]></category>

		<guid isPermaLink="false">http://blog.coronalabs.com/?p=30719</guid>
		<description><![CDATA[It's Wednesday and time for another frequently asked questions (FAQs) session. Here are some FAQs about submitting Corona Bug Reports.]]></description>
				<content:encoded><![CDATA[<p><img src="http://blog.coronalabs.com/wp-content/uploads/2013/01/FAQ.png" alt="FAQ Icon" class="alignleft size-full wp-image-28552" /><br />
It&#8217;s Wednesday and time for another frequently asked questions (FAQs) session. Here are some FAQs about submitting Corona Bug Reports.</p>
<h2>1. The Corona Simulator not longer works, please fix it!</h2>
<p>That was an actual bug report we received with no other information about the problem. We do like to know about bugs and try to fix them, but you need to supply information to help us do that. At the very minimum, we need the following items in your bug report:</p>
<ul>
<li>What platform are you having the problem on: Mac simulator, Windows, simulator, iOS, Android?</li>
<li>If it&#8217;s failing only on a device, which ones have you tested and what version of the OS is it using?</li>
<li>What Corona build are you using? If it&#8217;s a Daily Build, does it work with the Release Build? What build did it stop working on?</li>
<li>Steps to reproduce the problem</li>
<li>Project code to demonstrate the problem</li>
</ul>
<p>If your project is failing when doing a build or installing on a device, try building and installing one of the Corona sample projects (e.g., HelloWorld). That will tell you if your system is set up to build and install your app.</p>
<p>When you&#8217;re filing a bug report, please think about what you would need to troubleshoot the problem if you were assigned this bug.</p>
<p>You will see the <a href=http://developer.coronalabs.com/content/bug-submission>&#8220;Report A Bug&#8221;</a> link at the top of the Corona website when you&#8217;re logged in. Please fill out the entire form and add any additional information to help reproduce your bug.</p>
<h2>2. I posted my bug in the forums, so why do I need to submit a bug report?</h2>
<p>A lot of bugs get posted in the Corona forums, and that&#8217;s a good thing. It makes users aware of the possible problem and others can help confirm the bug. We do monitor the forums and respond to reports, but just because we responded in the forums, doesn&#8217;t mean the bug is in our system to be fixed. You need to file a formal bug report with the information listed above. This adds it to our bug tracking system and allows us to assign a priority to the bug and route it to engineering for a fix. It also assigns a case number that can be used to track the bug.</p>
<h2>3. My bug was rejected because I didn&#8217;t supply test code. Why?</h2>
<p>We need test code in order to verify the bug. Just describing what you&#8217;re doing in your code is generally not enough. In many cases it&#8217;s the combination of all the code files and assets that factor into the bug. We have tried to reproduce many bug cases with only a code snippet and find that there wasn&#8217;t enough information to show the problem.</p>
<p>Supplying test code also helps us verify and assign your case faster. If there is a complete test project that we can run, it will be evaluated as soon as possible. Cases that require creating a new project with your code snippet, may be pushed aside until later.</p>
<h2>4. My bug was rejected because I only supplied a main.lua file. Why?</h2>
<p>Many cases come in with just a <strong>main.lua</strong> file attached. Sometimes this is enough to reproduce the problem but in many cases it&#8217;s not. I remember one case where only the <strong>main.lua</strong> file was supplied. I created a new project using the file and couldn&#8217;t reproduce the bug. It turned out that the bug only occurred in landscape mode. If they had supplied a complete set of project files, I would have seen the problem and saved time.</p>
<p>Sometimes you don&#8217;t know the exact cause of the problem so supplying an entire test project that demonstrates the issue, will help us confirm the bug and get it assigned to be fixed sooner.</p>
<h2>5. My project is too big to submit, what can I do?</h2>
<p>As mentioned in Question 4, we want project code that demonstrates the problem, but we don&#8217;t want your complete project. The reason is it takes to much time to go through the code and try to understand what it&#8217;s doing. Not all problems you encounter in your development will be Corona bugs so you need to debug and isolate problems you&#8217;re seeing. If in that process you find a bug, and know that it&#8217;s not something you&#8217;re doing wrong in your code, please try to create a short test case that demonstrates the problem. You can then zip up that project (with all its support files and assets) and attach it to the bug report.</p>
<p>We&#8217;ve had some users send us their complete project code and ask us to debug it for them. We don&#8217;t have the resources nor the time to do that and can only address bug reports where someone has taken the time to isolate and identify a Corona problem.</p>
<h2>6 Why does the simulator crash when I run my app?</h2>
<p>Simulator crashes occur with uncaught errors in the project code. We place a high priority on fixing errors that cause the simulators to crash, but sometimes there are errors in the project code that will crash the simulator.</p>
<p>If you&#8217;re running the Mac simulator, it will generate a &#8220;crash log.&#8221; Many users have sent us these crash logs after getting the crash. The crash logs give us an idea where the problem is, but don&#8217;t help us find and fix the cause of the crash.</p>
<p>To help solve this bug, we really need a small test project that can reproduce the simulator crash along with the steps to reproduce it.</p>
<p>That&#8217;s it for today&#8217;s questions. I hope you enjoyed them and even learned a few things.</p>
]]></content:encoded>
			<wfw:commentRss>/blog/2013/03/27/wednesday-faq-corona-bug-reports/feed/</wfw:commentRss>
		<slash:comments>12</slash:comments>
		</item>
		<item>
		<title>Wednesday FAQ: Runtime Error Listener</title>
		<link>/blog/2013/03/13/wednesday-faq-runtime-error-listener/</link>
		<pubDate>Wed, 13 Mar 2013 19:25:38 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
				<category><![CDATA[FAQ]]></category>
		<category><![CDATA[corona]]></category>
		<category><![CDATA[CoronaSDK]]></category>
		<category><![CDATA[runtime]]></category>

		<guid isPermaLink="false">http://blog.coronalabs.com/?p=30020</guid>
		<description><![CDATA[It's Wednesday and time for another FAQ session. Here are some frequently asked questions (FAQs) about the new runtime error handler and about Android permissions.]]></description>
				<content:encoded><![CDATA[<p><img src="/wordpress/wp-content/uploads/2013/01/FAQ.png" alt="FAQ Icon" class="alignleft size-full wp-image-28552" />It&#8217;s Wednesday and time for another FAQ session. Here are some frequently asked questions (FAQs) about the new runtime error handler and about Android permissions.</p>
<p><img src="http://blog.coronalabs.com/wp-content/uploads/2013/03/FAQ24_screen1-281x300.png" alt="FAQ Runtime Popup" class="alignright size-medium wp-image-30026" /></p>
<h2>1. What about the Runtime Error Message Popup on current Daily Builds?</h2>
<p>Starting with Build 1030 on Android and Build 1047 for all other platforms, runtime errors will now generate a popup message box showing the error along with the file and line number (if it&#8217;s a debug build). The error information is still displayed in the console, but you don&#8217;t need a console/terminal window open to know that an error occurred. Starting with Build 1047, you can include a runtime listener in your code to trap the error and suppress the runtime popup message (if desired).</p>
<p>The runtime message box occurs by default on all platforms, including both the Mac and Windows Simulators.</p>
<h2>2. How do I implement a Lua Runtime Error Listener?</h2>
<p>The following code shows how to implement the runtime listener (&#8220;unhandledError&#8221;). If you run the code in the Corona Simulator or on a device, you will see the error caused by concatenating a nil value with a string in the print statement.</p>
<p></p><pre class="crayon-plain-tag">local releaseBuild = true   -- Set to true to suppress popup message

-- Error handler
local function myUnhandledErrorListener( event )

    if releaseBuild then
        print( &quot;Handling the unhandled error &gt;&gt;&gt;\n&quot;, event.errorMessage )
        display.newText( &quot;&gt;&gt;&gt; ERROR OCCURRED &lt;&lt;&lt;&quot;, 30, 1, native.systemFont, 18 )
    else
        print( &quot;Not handling the unhandled error &gt;&gt;&gt;\n&quot;, event.errorMessage )
    end
    
    return releaseBuild
end

Runtime:addEventListener(&quot;unhandledError&quot;, myUnhandledErrorListener)

-- Displays text message in center of screen
txtMsg1 = display.newText( &quot;Runtime Error Test Code&quot;, 55, 200, &quot;Verdana-Bold&quot;, 14 )

print( &quot;ABC&quot; .. nil )  -- &lt;&lt;&lt;&lt; Lua error here</pre><p></p>
<p><img src="http://blog.coronalabs.com/wp-content/uploads/2013/03/FAQ24_screen2-146x300.png" alt="Runtime error with Popup" class="alignright size-medium wp-image-30027" /></p>
<p>If you return <strong>false</strong> from the listener (the default value), the popup message box occurs when the listener function exits. Returning <strong>true</strong> indicates that the listener function handled the runtime error and the popup message is suppressed. In the above code, the <strong>releaseBuild</strong> variable determines if the popup message is displayed or not.</p>
<h2>3. What is the best practices for the Runtime Error Listener?</h2>
<p>The intent of adding the runtime popup message and the runtime error listener is to give the developer more tools to get there code running and to track down errors. If you build for debug (<strong>developer</strong> mode on iOS or using the <strong>debug</strong> key on Android), any runtime errors include the file name and line number where the error occurred. It also includes a message about the error. Normally, this information is included in the popup message box. If you add the runtime listener and suppress the popup, you still have access to the error information through the event table passed to the listener and in the console/terminal.</p>
<p>In production release, only the error type is available. You can implement the runtime listener and use it to suppress the error popup and log the errors internally. What you do with this error log is up to you. You can ignore it or create a log file that is sent to your own server to track problems. One of the advantages of allowing popup errors to occur, is that it sends the information back to Google Play, which makes the information available to the developer. If you suppress the popup, the information will be lost unless you log and send it to your own server.</p>
<p>You may want to allow the runtime popups during your debug and testing phases and suppress the popup when you deliver your app to the app store.</p>
<p>One thing that I mentioned in a previous FAQ, ignoring errors is not the best practice. Runtime errors will alter the code path and may cause the app to become unstable. You should always test your app on as many devices as possible and eliminate or trap (using <strong>pcall</strong>) any errors found.</p>
<h2>4. I&#8217;m using the Runtime Listener but I&#8217;m still getting the Runtime Error popup.</h2>
<p>If you implemented the runtime error listener in your code that suppresses the error popup and you&#8217;re still getting the popup, you may have an error occurring before the runtime listener starts. As shown in the above example code, the runtime listener function was the first thing defined in the code. The key is enabling the runtime listener as soon as possible so it can trap the errors. Errors that occur before the runtime error listener has been enabled, will generate the popup message. Generally, errors that occur on startup are easy to fix and don&#8217;t require trapping. It&#8217;s the runtime errors that occur with touch events, collisions, etc., that occur while the app is running, that are the important ones to trap if you want to suppress the popup message to your users.</p>
<h2>5. What about Android Permissions and runtime errors?</h2>
<p>In Build 1030 we removed the default permissions in the Android Manifest so you are now responsible for adding back the permissions for APIs that require them. All the Daily Build sample code projects and the API pages have been updated to show the required permissions in the <strong>build.settings</strong> file.</p>
<p>Generally, missing permissions will generate a runtime error with either a runtime popup or by calling the runtime &#8220;unHandledError&#8221; listener (if implemented). Missing permissions is something that should be tested and caught before releasing your app (see question 6).</p>
<h2>6. Which Android Permissions won&#8217;t generate a runtime error?</h2>
<p>Some API calls will fail silently if the proper permissions are not set in <strong>build.settings</strong> file. They are:</p>
<ul>
<li>display.capture</li>
<li>display.captureBoard</li>
<li>display.captureScreen</li>
<li>media.newRecording</li>
<li>media.newVideo</li>
<li>media.save</li>
<li>media.show</li>
<li>native.webView</li>
<li>native.newWebPopup</li>
<li>heading( Compass) event</li>
<li>location (GPS) event</li>
</ul>
<p>For the APIs listed above, you need to check the results to verify that the code works as expected. It&#8217;s a good idea to double check that you have set the proper permissions in the <strong>build.settings</strong> file for those APIs. For future builds we are looking at adding runtime checks for all APIs to insure they all have the proper permissions set.</p>
<p>Check the <a href=https://developer.coronalabs.com/downloads/daily-builds>Daily Build Documents</a> for the correct Android permissions needed for each API.</p>
<p>That&#8217;s it for today&#8217;s answers. I hope you enjoyed them and even learned a few things!</p>
]]></content:encoded>
			</item>
		<item>
		<title>FAQ Wednesday: Mac Simulator Updates</title>
		<link>/blog/2013/01/30/faq-wednesday-mac-simulator-updates/</link>
		<pubDate>Thu, 31 Jan 2013 03:53:00 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
				<category><![CDATA[FAQ]]></category>
		<category><![CDATA[CoronaSDK]]></category>
		<category><![CDATA[mac]]></category>
		<category><![CDATA[simulator]]></category>

		<guid isPermaLink="false">http://www.coronalabs.com/?p=28827</guid>
		<description><![CDATA[It's Wednesday and time for another FAQ session. This week it's not really an FAQ, but more of an update on recent Mac Simulator changes that are available in the Daily Builds.]]></description>
				<content:encoded><![CDATA[<p><img src="http://www.coronalabs.com/wp-content/uploads/2013/01/FAQ.png" alt="FAQ Icon" class="alignright size-full wp-image-28552" /><br />
It&#8217;s Wednesday and time for another FAQ session. This week it&#8217;s not really an FAQ, but more of an update on recent Mac Simulator changes that are available in the Daily Builds.</p>
<h2>1.  Loading the last project on simulator startup</h2>
<p>In build #996, a new preference was added to the <strong>Preferences</strong> menu: &#8220;Automatically open last project&#8221;. This is convenient if you want the to reload the project you were working on when you last quit the simulator.<br />
<img src="http://www.coronalabs.com/wp-content/uploads/2013/01/Build_1017_Preferences-300x249.png" alt="Corona Preference Window" class="alignright size-medium wp-image-28831" /></p>
<h2>2. Reloading the last project</h2>
<p>Both the Mac and Windows simulators had the ability to &#8220;Relaunch&#8221; the last project using <strong>Cmd R</strong> (<strong>Ctrl R</strong> on Windows), but that didn&#8217;t work in the Mac Simulator when the simulator was first started. As of build #1017, you can now start the simulator and press <strong>Cmd R</strong> to relaunch. You can also set the preference to always relaunch as mentioned in question 1.</p>
<h2>3. Simulator now continues to run after a build</h2>
<p>If you have built a project with the Mac Simulator, you no doubt have seen the giant &#8220;iOS spinner&#8221; on top of the device skin as the build was occurring. This continued after the build was done and was there to show you that the simulator was suspended. In build #996 the simulator still suspends the app during the build process, but now continues to run once the build is done. You can suspend the app in the simulator yourself by selecting <strong>Suspend</strong> from the <strong>Hardware</strong> menu or pressing <strong>Cmd downarrow</strong>.</p>
<h2>4. Unicode characters in asset file names</h2>
<p>As of build #1017 the Mac Simulator now supports Unicode in asset files names. This applies to image and sound files as well as subfolders. Note: Currently there is an issue using Unicode named files in Windows, which we are looking into.</p>
<h2>5. Supporting iOS 6.1 builds</h2>
<p>On January 28, Apple officially released iOS 6.1. We are installing the latest version on our build servers and it should be available in the next couple of days (check the <a href=http://developer.coronalabs.com/corona-daily-builds/summary>Daily Build summary</a> page). For the next few Daily Builds, we will still support building for the existing iOS 6.0 SDK as well as the new 6.1 SDK. Just select the proper <strong>iOS SDK</strong> from the pull-down menu in the build window.</p>
<p>If you have some ideas on how to improve the simulator or some feature you would like to see added to Corona, please visit the <a href=http://feedback.coronalabs.com>Corona/ Feedback</a> page.</p>
<p>That&#8217;s it for today&#8217;s questions. I hope you enjoyed it and even learned a few things.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Tutorial: Using Custom Fonts</title>
		<link>/blog/2013/01/16/faq-wednesday-custom-fonts/</link>
		<comments>/blog/2013/01/16/faq-wednesday-custom-fonts/#comments</comments>
		<pubDate>Thu, 17 Jan 2013 07:14:19 +0000</pubDate>
		<dc:creator><![CDATA[tom]]></dc:creator>
				<category><![CDATA[FAQ]]></category>
		<category><![CDATA[android]]></category>
		<category><![CDATA[CoronaSDK]]></category>
		<category><![CDATA[custom fonts]]></category>
		<category><![CDATA[iOS]]></category>

		<guid isPermaLink="false">http://www.coronalabs.com/?p=28549</guid>
		<description><![CDATA[It's Wednesday and time for another FAQ session. Here are some frequently asked questions about using custom fonts in Corona.]]></description>
				<content:encoded><![CDATA[<p><strong>NOTE:</strong> This tutorial is outdated and has been replaced by the <a href=http://docs.coronalabs.com/guide/system/customFont/index.html>Using Custom Fonts</a> guide.</p>
<hr />
]]></content:encoded>
			<wfw:commentRss>/blog/2013/01/16/faq-wednesday-custom-fonts/feed/</wfw:commentRss>
		<slash:comments>18</slash:comments>
		</item>
	</channel>
</rss>
